name: Release Go Project

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
      - name: Build binary
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -ldflags "-s -w -X github.com/turchenkoalex/ecwid-images-downloader/cmd.version=${{ github.ref_name }} -X github.com/turchenkoalex/ecwid-images-downloader/cmd.commit=${{ github.sha }} -X github.com/turchenkoalex/ecwid-images-downloader/cmd.date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" -o ecwid-images-downloader-${{ matrix.os }}-${{ matrix.arch }}

      - name: Archive binary
        run: |
          zip ecwid-images-downloader-${{ matrix.os }}-${{ matrix.arch }}.zip ecwid-images-downloader-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ecwid-images-downloader-${{ matrix.os }}-${{ matrix.arch }}
          path: ecwid-images-downloader-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          files: |
            ./ecwid-images-downloader-*/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
